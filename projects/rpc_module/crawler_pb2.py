# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: crawler.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from model import jingdong_flow_pb2 as model_dot_jingdong__flow__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='crawler.proto',
  package='Crawler',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\rcrawler.proto\x12\x07\x43rawler\x1a\x19model/jingdong_flow.proto2\x96\x01\n\x07Greeter\x12\x42\n\x08SayHello\x12\x1a.JingdongFlow.HelloRequest\x1a\x18.JingdongFlow.HelloReply\"\x00\x12G\n\rSayHelloAgain\x12\x1a.JingdongFlow.HelloRequest\x1a\x18.JingdongFlow.HelloReply\"\x00\x62\x06proto3')
  ,
  dependencies=[model_dot_jingdong__flow__pb2.DESCRIPTOR,])



_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_GREETER = _descriptor.ServiceDescriptor(
  name='Greeter',
  full_name='Crawler.Greeter',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  serialized_start=54,
  serialized_end=204,
  methods=[
  _descriptor.MethodDescriptor(
    name='SayHello',
    full_name='Crawler.Greeter.SayHello',
    index=0,
    containing_service=None,
    input_type=model_dot_jingdong__flow__pb2._HELLOREQUEST,
    output_type=model_dot_jingdong__flow__pb2._HELLOREPLY,
    serialized_options=None,
  ),
  _descriptor.MethodDescriptor(
    name='SayHelloAgain',
    full_name='Crawler.Greeter.SayHelloAgain',
    index=1,
    containing_service=None,
    input_type=model_dot_jingdong__flow__pb2._HELLOREQUEST,
    output_type=model_dot_jingdong__flow__pb2._HELLOREPLY,
    serialized_options=None,
  ),
])
_sym_db.RegisterServiceDescriptor(_GREETER)

DESCRIPTOR.services_by_name['Greeter'] = _GREETER

# @@protoc_insertion_point(module_scope)
